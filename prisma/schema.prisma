// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
 //Modelos
//image String? ||esto significa que es opcional, talvez tengamos y talvez no

//hashedPassword String? es opcional por que si se usa google o github para iniciar secion no la necesita 
model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAT DateTime @default(now())
  updateAT DateTime @updatedAt
  favoriteIds String[] @db.ObjectId
  sessions Session[]
  accounts Account[]
}

//Este modelo se creara 
// al momento de usar 
// cuenta de google o github
model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId 
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expire_at Int?
  token_type String?
  scope String?
  id_token String? @db.String 
  session_state String?

  user User @relation(fields: [userId],references: [id],onDelete:Cascade )

  @@unique([provider,providerAccountId])
}

model Session{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier,token])

}

//Model Movies
model Movie {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  videoUrl String
  thumbnaiUrl String
  genre String
  duration String
}